# 导论
## 操作系统的功能
   + 操作系统分为四个组件：硬件、操作系统、用户程序、用户
   + 操作系统可以分为硬件、软件以及数据
   + 操作系统主要关注的是系统的易用性，次要关注性能和安全性，并不需要关注资源利用率
   + 可以把操作系统看作一个资源分配器，另一个视角可以把操作系统当成是个控制程序
   + 操作系统是一直运行在计算机上的程序（内核），其他两类程序是系统程序和应用程序
   + 移动操作系统不只有内核还有中间件，为应用程序开发人提供其他功能的软件框架
## 计算机系统的组成
   + 计算机系统包括一个或多个 CPU 和若干个设备控制器，通过共用总线相连，总线提供共享内存的访问
   + 设备控制器在所控制的外围设备与本地缓存之间进行数据传递，操作系统为设备控制器提供设备驱动程序，提供统一设备访问接口
   + 硬件可以通过系统总线随时发生信号到 CPU 触发中断，它是操作系统和硬件交互的关键部分
   + CPU 被中断时停止正在做的事，立即跳转到中断服务程序的开始地址执行，执行完成后继续中断前的操作
   + 通过指针表可以间接调用中断程序，指针表位于低地址内存中，保存各种设备的中断处理程序地址
   + CPU 执行每条命令后都会检测中断请求线，检测到中断信号后会读取中断号码作为中断向量的索引来跳转到中断处理程序
   + 非屏蔽中断通常是发生紧急情况需要紧急处理的中断，可屏蔽中断是可临时被屏蔽的不重要的中断
   + 中断链技术允许多个中断处理程序共享一个中断号，触发中断后会依次查询是哪条具体的中断
   + 中断优先级系统使 CPU 延迟处理低优先级中断而不屏蔽所有中断，并且让高优先级中断抢占低优先级中断
   + 程序必须在内存中才能被执行，CPU 从内存中加载指令并存到指令寄存器，接着指令被解码执行
   + RAM 断电后会丢失数据，数据主要被保存在外存中
## 计算机系统的体系结构
   + 处理核是执行指令和利用寄存器存储数据的组件，带处理核的 CPU 可以执行通用指令包括进程的指令
   + 多处理器共享计算机总线、时钟、内存和外围设备，可以同时运行多个程序
   + 非均匀内存访问是一种多处理器架构，其中CPU访问本地内存速度快于远程内存，需通过软件优化减少跨节点访问以提升性能
   + 松耦合指系统或组件之间的依赖关系较弱，彼此通过标准化接口交互，而非紧密绑定，通过降低依赖提升系统的可维护性和可扩展性
   + 集群计算机共享存储，采用局域网或使用更快的内部连接
   + 集群通常用于高可用性服务，集群中的一个或多个系统出错仍可继续提供服务
   + 并行计算指将一个程序分成多个部分，每个部分可以并行运行在计算机或集群计算机的各个核上
## 操作系统的执行
   + 计算机启动时需要有一个初始程序才能运行，通常以固件的形式存储在计算机硬件中
   + 有些服务由系统程序在内核外提供，在启动时加载到内存中成为系统守护进程，linux 上的第一系统程序是 systemd
+ 陷阱是程序的主动求助，而异常是被动事故；两者均通过中断机制进入内核，但陷阱是预期行为，异常可能致命
+ 多道程序设计通过组织程序使得 CPU 总有一个在执行作业，提高 CPU 利用率，正在执行的程序成为进程
+ 多任务是多道程序设计的逻辑扩展，CPU 在多个进程之间切换来执行多个进程
+ 通常计算机分为用户模式和内核模式，计算机硬件通过一个模式位来表示当前模式
+ 系统引导时硬件从内核模式开始，引导完成后切换到用户模式；有陷进或中断会进入内核模式，执行后回到用户模式
+ 操作系统应维持控制 CPU，防止用户程序进入死循环，使用定时器触发中断自动跳转到内核模式
** 资源管理
+ 进程可以通过系统调用创建子进程以并发执行，进程有一个程序计数器指定了下个所要执行的命令
+ 主存一般是 CPU 所能直接寻址和访问的唯一的大容量存储器，磁盘的数据必须通过 CPU 的 I/O 调用传到主存
+ 如果程序要执行，必须映射到绝对地址，即真实的物理地址，并且加载到内存
+ 操作系统映射文件到物理媒介，并通过存储设备来访问文件
+ 信息保存在一个存储系统中，使用时会临时复制到高速缓存中，如果信息在高速缓存中则直接使用，反之则复制到高速缓存下次再用
+ 高速缓存的一致性指多个 CPU 的并行执行，应确保位于一个高速缓存的值更新，马上反映到所有其他该值所在的高速缓存
+ 操作系统的目的之一是隐藏具体硬件设备的特性，只有设备驱动才知道控制设备的特性
** 安全与保护
+ 保护是一种机制，用于控制进程或用户访问计算机系统的资源
+ 防止系统不受外部或内部的攻击是安全的工作
+ 大多数的操作系统采用列表维护用户名称及其关联用户标识（UID）
+ 有些文件只能被某个特定的组读取和写入，组功能采用一个系统级的列别，维护组名称和组标识
** 虚拟化
+ 虚拟化是一种技术，可将单个计算机硬件抽象成多个不同执行环境
+ 仿真通常在源头 CPU 类型与目标 CPU 类型不同时使用
** 分布式系统
+ 分布式系统是物理上分开的、可能异构的、通过网络相连的一组计算机系统
+ 网络是两个或者多个系统之间的通信路径
** 内核数据结构
+ 数组项可以直接访问，列表项需要按特定次序来访问
+ 堆栈采用后进先出，队列采用先进先出
+ 二叉查找树要求左节点小于等于右节点
+ 哈希函数将一个数作为输入，返回一个索引，快速获得数据
+ 每个磁盘块的可用性可通过位图来表示
** 计算环境
1. 防火墙保护家庭内部环境以便避免破坏，限制网络设备之间的通信
2. 当代网络架构的特点是服务器系统满足客户端系统生成的请求
3. P2P 模型不区分客户机与服务器，所有系统节点都是对等的
4. 云计算可以通过网络提供计算、存储甚至应用程序等服务，从某些方面来看是虚拟化技术的延伸
5. 当处理器执行或数据流动具有严格时间要求时使用实时操作系统
** 练习
1. 提供用户与计算机硬件之间的接口、管理计算机资源、控制程序的执行
2. 出现故障、死机、程序报错等时候需要“浪费”资源，操作系统的设计是权衡的艺术，资源浪费是否合理取决于更高层次的系统目标
3. 资源受限环境的高效管理、并发与同步的可靠性、中断处理的实时性、硬件兼容性与低层优化
4. 不应该包含，增加操作系统的复杂度，不易于维护，操作系统只提供基础功能，剩下的交给软件开发者即可
5. 模式位（0=内核/1=用户）；特权指令限制、内存隔离、系统调用门
6. a、c、e、f、h
7. 灵活性受限、功能限制
8. 安全隔离、虚拟化支持
9. 当前时间 = 启动时间 + (中断次数 * 中断间隔)
10. 解决速度不匹配、减少重复计算；性能瓶颈、低效性；复杂度增加、成本高昂
11. CS模型是服务器提供服务，客户端发起请求；P2P模型是所有节点既是客户端又是服务器
** 习题
1. 集群是多台独立计算机通过网络连接、多处理器是共享内存的多个 CPU；机器间定期通信确认存活状态
2. 共享磁盘架构：优点是数据一致性容易维护，实现简单；缺点是磁盘成为单点故障，扩展性受限 \\
   数据复制架构：优点是无单点故障，读取性能高；缺点是写操作需同步，网络开销大，一致性维护复杂
3. 
4. 
5. 
6. 
7. 

* 操作系统结构
** 操作系统的服务
+ 
+ 
+ 
** 
